/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\nconst GameView = __webpack_require__(/*! ./scripts/game_view.js */ \"./src/scripts/game_view.js\");\nwindow.GameView = GameView;\nwindow.Game = Game;\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvasEl = document.getElementById(\"background\");\n  canvasEl.width = window.innerWidth;\n  canvasEl.height = window.innerHeight;\n  const ctx = canvasEl.getContext('2d');\n  const game = new Game(ctx);\n  new GameView(game, ctx).start();\n});\n// const targ = new target\n// const spnr = new spinner\n// const bllt = new bullet\n// const ctxx = canvasEl.getContext(\"2d\");\n// const bgrnd = new background\n\n// targ.drawTarget(ctxx)\n// spnr.drawSpinner(ctxx)\n// bllt.drawBullet(ctxx)\n// bgrnd.drawBackground(ctxx)\n\n// function animate(i) {\n//     const ctx = canvasEl.getContext(\"2d\");\n//     requestAnimationFrame(animate);\n//     ctx.clearRect(0,0,window.innerWidth,window.innerHeight)\n\n//     ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n\n//     // const img = document.getElementById(\"bground\")\n//     // ctx.drawImage(img, 0,0)\n\n//     targ.x += 1\n//     // debugger\n//     bgrnd.animate(ctx)\n//     targ.animate(ctx)\n//     spnr.animate(ctx)\n//     bllt.animate(ctx)\n\n// }\n// animate(0);\n//   });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLGdEQUFtQixDQUFDO0FBQ3pDLE1BQU1DLFFBQVEsR0FBR0QsbUJBQU8sQ0FBQywwREFBd0IsQ0FBQztBQUVsREUsTUFBTSxDQUFDRCxRQUFRLEdBQUdBLFFBQVE7QUFDMUJDLE1BQU0sQ0FBQ0gsSUFBSSxHQUFHQSxJQUFJO0FBRWxCSSxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLFlBQVU7RUFDcEQsTUFBTUMsUUFBUSxHQUFHRixRQUFRLENBQUNHLGNBQWMsQ0FBQyxZQUFZLENBQUM7RUFDdERELFFBQVEsQ0FBQ0UsS0FBSyxHQUFHTCxNQUFNLENBQUNNLFVBQVU7RUFDbENILFFBQVEsQ0FBQ0ksTUFBTSxHQUFHUCxNQUFNLENBQUNRLFdBQVc7RUFDcEMsTUFBTUMsR0FBRyxHQUFHTixRQUFRLENBQUNPLFVBQVUsQ0FBQyxJQUFJLENBQUM7RUFFckMsTUFBTUMsSUFBSSxHQUFHLElBQUlkLElBQUksQ0FBQ1ksR0FBRyxDQUFDO0VBQzFCLElBQUlWLFFBQVEsQ0FBQ1ksSUFBSSxFQUFFRixHQUFHLENBQUMsQ0FBQ0csS0FBSyxFQUFFO0FBRW5DLENBQUMsQ0FBQztBQUNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlkZ2V0LXNwaW5uZXItcHJvamVjdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgR2FtZSA9IHJlcXVpcmUoXCIuL3NjcmlwdHMvZ2FtZS5qc1wiKTtcbmNvbnN0IEdhbWVWaWV3ID0gcmVxdWlyZShcIi4vc2NyaXB0cy9nYW1lX3ZpZXcuanNcIilcblxud2luZG93LkdhbWVWaWV3ID0gR2FtZVZpZXdcbndpbmRvdy5HYW1lID0gR2FtZVxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbigpe1xuICAgIGNvbnN0IGNhbnZhc0VsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYWNrZ3JvdW5kXCIpO1xuICAgIGNhbnZhc0VsLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgY2FudmFzRWwuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgIGNvbnN0IGN0eCA9IGNhbnZhc0VsLmdldENvbnRleHQoJzJkJylcblxuICAgIGNvbnN0IGdhbWUgPSBuZXcgR2FtZShjdHgpXG4gICAgbmV3IEdhbWVWaWV3KGdhbWUsIGN0eCkuc3RhcnQoKVxuXG59KVxuICAgIC8vIGNvbnN0IHRhcmcgPSBuZXcgdGFyZ2V0XG4gICAgLy8gY29uc3Qgc3BuciA9IG5ldyBzcGlubmVyXG4gICAgLy8gY29uc3QgYmxsdCA9IG5ldyBidWxsZXRcbiAgICAvLyBjb25zdCBjdHh4ID0gY2FudmFzRWwuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgIC8vIGNvbnN0IGJncm5kID0gbmV3IGJhY2tncm91bmRcblxuICAgIC8vIHRhcmcuZHJhd1RhcmdldChjdHh4KVxuICAgIC8vIHNwbnIuZHJhd1NwaW5uZXIoY3R4eClcbiAgICAvLyBibGx0LmRyYXdCdWxsZXQoY3R4eClcbiAgICAvLyBiZ3JuZC5kcmF3QmFja2dyb3VuZChjdHh4KVxuICAgIFxuICAgIC8vIGZ1bmN0aW9uIGFuaW1hdGUoaSkge1xuICAgIC8vICAgICBjb25zdCBjdHggPSBjYW52YXNFbC5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgLy8gICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKTtcbiAgICAvLyAgICAgY3R4LmNsZWFyUmVjdCgwLDAsd2luZG93LmlubmVyV2lkdGgsd2luZG93LmlubmVySGVpZ2h0KVxuICAgICAgICBcbiAgICAgICAgXG4gICAgLy8gICAgIGN0eC5maWxsUmVjdCgwLCAwLCB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcblxuICAgIC8vICAgICAvLyBjb25zdCBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJncm91bmRcIilcbiAgICAvLyAgICAgLy8gY3R4LmRyYXdJbWFnZShpbWcsIDAsMClcblxuICAgIC8vICAgICB0YXJnLnggKz0gMVxuICAgIC8vICAgICAvLyBkZWJ1Z2dlclxuICAgIC8vICAgICBiZ3JuZC5hbmltYXRlKGN0eClcbiAgICAvLyAgICAgdGFyZy5hbmltYXRlKGN0eClcbiAgICAvLyAgICAgc3Buci5hbmltYXRlKGN0eClcbiAgICAvLyAgICAgYmxsdC5hbmltYXRlKGN0eClcbiAgICAgICAgXG4gICAgLy8gfVxuICAgIC8vIGFuaW1hdGUoMCk7XG4vLyAgIH0pOyBcblxuXG4gICJdLCJuYW1lcyI6WyJHYW1lIiwicmVxdWlyZSIsIkdhbWVWaWV3Iiwid2luZG93IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2FudmFzRWwiLCJnZXRFbGVtZW50QnlJZCIsIndpZHRoIiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0IiwiY3R4IiwiZ2V0Q29udGV4dCIsImdhbWUiLCJzdGFydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/background.js":
/*!***********************************!*\
  !*** ./src/scripts/background.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// use createPattern() or make bgroundImg a canvas and drawImg(bgroundImg.translate(xvel, yvel))\n\nconst MovingObject = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\nconst Game = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\nconst Util = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\nconst Spinner = __webpack_require__(/*! ./spinner */ \"./src/scripts/spinner.js\");\nclass Background extends MovingObject {\n  // CHANGE to 4+\n\n  constructor(options) {\n    // Why can't I use Game.DIM_X or Game.DIM_Y here?\n    // console.log(`innerHeight: ${window.innerHeight}`)\n    super(options);\n    // console.log(Background.DIM_X)\n    // console.log(Game.WIDTH)\n    // console.log(this.game)\n    // console.log(this.game.width)\n    // console.log(this.game.WIDTH)\n    // console.log(this.game.getGameHeight())\n    this.bgroundImg = document.getElementById(\"bground\");\n    this.height = window.innerHeight;\n    this.width = window.innerWidth;\n    this.pos = {\n      x: Background.DIM_X / 2,\n      y: Background.DIM_Y / 2\n    };\n    this.stop = {\n      right: this.width / 2 - Spinner.SPINNER_SIZE / 2,\n      left: this.width / 2 + Spinner.SPINNER_SIZE / 2,\n      up: this.height / 2 - Spinner.SPINNER_SIZE / 2,\n      down: this.height / 2 + Spinner.SPINNER_SIZE / 2\n    };\n    // CHANGE to 0\n    this.maxSpeed = 5;\n    // console.log(Background.DIM_Y)\n  }\n\n  // Overwrites movingObject.move\n  move(delta) {\n    // Need delta so vel formula calculated same way as MovingObj_relVel\n    delta = delta || 1;\n\n    // x and y vel must be less than or equal to max speed\n    // Cases where limiting is necessary: > 0 and > max, < 0 and abs > max\n    let dims = ['x', 'y'];\n    for (let i = 0; i < dims.length; i++) {\n      if (this.vel[dims[i]] > 0 && this.vel[dims[i]] > this.maxSpeed) {\n        this.vel[dims[i]] = this.maxSpeed;\n      } else if (this.vel[dims[i]] < 0 && Math.abs(this.vel[dims[i]]) > this.maxSpeed) {\n        this.vel[dims[i]] = -1 * this.maxSpeed;\n      }\n    }\n\n    // Can't move Out of Bounds (Oob)\n    if (this.isOobUp(this.pos)) {\n      // console.log(`oobUp`)\n      this.pos.y = Background.DIM_Y;\n      this.vel.y = 0;\n    } else if (this.isOobDown(this.pos)) {\n      // console.log('oobDown')\n      this.pos.y = 0;\n      this.vel.y = 0;\n    } else if (this.isOobLeft(this.pos)) {\n      // console.log('oobLeft')\n      this.pos.x = 0;\n      this.vel.x = 0;\n    } else if (this.isOobRight(this.pos)) {\n      // console.log('oobRight')\n      this.pos.x = Background.DIM_X;\n      this.vel.x = 0;\n    }\n    this.pos.y += this.vel.y * delta / 40;\n    this.pos.x += this.vel.x * delta / 40;\n  }\n  draw(ctx) {\n    // console.log(`Xspeed: ${this.vel.x}, maxSpeed: ${this.maxSpeed}`) \n    // console.log(`pos: ${JSON.stringify(this.pos.y)}`)\n    // console.log(`vel: ${JSON.stringify(this.vel)}`)\n    this.move();\n    ctx.clearRect(0, 0, Background.DIM_X, Background.DIM_Y);\n    const pattern = ctx.createPattern(this.bgroundImg, \"repeat\");\n    ctx.fillStyle = pattern;\n    ctx.save();\n    ctx.translate(this.pos.x, this.pos.y);\n    ctx.fillRect(-this.pos.x, -this.pos.y, Background.DIM_X, Background.DIM_Y);\n    ctx.restore();\n\n    // if pos approaching top\n    if (this.pos.y > Background.DIM_Y - this.stop.up) {\n      // then clear from top of screen to stopping point - scroll (maxY - posY)\n      ctx.clearRect(0, 0, this.width, this.stop.up - (Background.DIM_Y - this.pos.y));\n\n      // if pos approaching bottom\n    } else if (this.pos.y < this.stop.down) {\n      // then clear from bottom of screen + scroll to stopping point\n      // clearRect(x, y, width, height) with x,y = topLeft\n      ctx.clearRect(0, this.stop.down + this.pos.y, this.width, this.height);\n    }\n\n    // Separately, if pos approaching right/left\n    if (this.pos.x > Background.DIM_X - this.stop.right) {\n      ctx.clearRect(0, 0, this.stop.right - (Background.DIM_X - this.pos.x), this.height);\n    } else if (this.pos.x < this.stop.left) {\n      ctx.clearRect(this.stop.left + this.pos.x, 0, this.width, this.height);\n    }\n  }\n  maxSpeedUp() {\n    this.maxSpeed += 1;\n  }\n  maxSpeedDown() {\n    this.maxSpeed -= 1;\n    if (this.maxSpeed < 0) {\n      this.maxSpeed = 0;\n    }\n  }\n  isOobRight(pos) {\n    return pos.x > MovingObject.WIDTH;\n  }\n  isOobLeft(pos) {\n    return pos.x < 0;\n  }\n  isOobUp(pos) {\n    // console.log(MovingObject.HEIGHT)\n    return pos.y > MovingObject.HEIGHT;\n  }\n  isOobDown(pos) {\n    return pos.y < 0;\n  }\n  isOobX(pos) {\n    return this.isOobRight(pos) || this.isOobLeft(pos);\n  }\n  isOobY(pos) {\n    return this.isOobUp(pos) || this.isOobDown(pos);\n  }\n  isOob(pos) {\n    return this.isOobX(pos) || this.isOobY(pos);\n  }\n}\n_defineProperty(Background, \"DIM_X\", window.innerWidth * 1.5);\n_defineProperty(Background, \"DIM_Y\", window.innerHeight * 1.5);\nmodule.exports = Background;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/background.js\n");

/***/ }),

/***/ "./src/scripts/bullet.js":
/*!*******************************!*\
  !*** ./src/scripts/bullet.js ***!
  \*******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst MovingObject = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\nclass Bullet extends MovingObject {\n  constructor(options) {\n    super(options);\n    this.pos = {\n      x: 200,\n      y: 200\n    };\n  }\n  draw(ctx) {\n    // debugger\n    const blltImg = document.getElementById(\"bulletImg\");\n    // debugger\n    ctx.drawImage(blltImg, this.pos.x, this.pos.y, Bullet.RADIUS, Bullet.RADIUS);\n  }\n\n  // hitTarget () {\n  //     this.remove()\n  //     targ.hit\n  // }\n}\n_defineProperty(Bullet, \"RADIUS\", 10);\n_defineProperty(Bullet, \"SPEED\", 5);\nmodule.exports = Bullet;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9idWxsZXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTUEsWUFBWSxHQUFHQyxtQkFBTyxDQUFDLHVEQUFpQixDQUFDO0FBRS9DLE1BQU1DLE1BQU0sU0FBU0YsWUFBWTtFQUk3QkcsV0FBVyxDQUFFQyxPQUFPLEVBQUU7SUFDbEIsS0FBSyxDQUFDQSxPQUFPLENBQUM7SUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBRztNQUFDQyxDQUFDLEVBQUUsR0FBRztNQUFFQyxDQUFDLEVBQUU7SUFBRyxDQUFDO0VBQy9CO0VBRUFDLElBQUksQ0FBRUMsR0FBRyxFQUFFO0lBQ1A7SUFDQSxNQUFNQyxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFdBQVcsQ0FBQztJQUNwRDtJQUNBSCxHQUFHLENBQUNJLFNBQVMsQ0FBQ0gsT0FBTyxFQUFFLElBQUksQ0FBQ0wsR0FBRyxDQUFDQyxDQUFDLEVBQUUsSUFBSSxDQUFDRCxHQUFHLENBQUNFLENBQUMsRUFBRUwsTUFBTSxDQUFDWSxNQUFNLEVBQUVaLE1BQU0sQ0FBQ1ksTUFBTSxDQUFDO0VBQ2hGOztFQUVBO0VBQ0E7RUFDQTtFQUNBO0FBQ0o7QUFBQyxnQkFwQktaLE1BQU0sWUFDUSxFQUFFO0FBQUEsZ0JBRGhCQSxNQUFNLFdBRU8sQ0FBQztBQW9CcEJhLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHZCxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlkZ2V0LXNwaW5uZXItcHJvamVjdC8uL3NyYy9zY3JpcHRzL2J1bGxldC5qcz8zNmJjIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1vdmluZ09iamVjdCA9IHJlcXVpcmUoXCIuL21vdmluZ19vYmplY3RcIilcblxuY2xhc3MgQnVsbGV0IGV4dGVuZHMgTW92aW5nT2JqZWN0e1xuICAgIHN0YXRpYyBSQURJVVMgPSAxMFxuICAgIHN0YXRpYyBTUEVFRCA9IDVcblxuICAgIGNvbnN0cnVjdG9yIChvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpXG4gICAgICAgIHRoaXMucG9zID0ge3g6IDIwMCwgeTogMjAwfVxuICAgIH1cblxuICAgIGRyYXcgKGN0eCkge1xuICAgICAgICAvLyBkZWJ1Z2dlclxuICAgICAgICBjb25zdCBibGx0SW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidWxsZXRJbWdcIik7XG4gICAgICAgIC8vIGRlYnVnZ2VyXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UoYmxsdEltZywgdGhpcy5wb3MueCwgdGhpcy5wb3MueSwgQnVsbGV0LlJBRElVUywgQnVsbGV0LlJBRElVUyk7XG4gICAgfVxuXG4gICAgLy8gaGl0VGFyZ2V0ICgpIHtcbiAgICAvLyAgICAgdGhpcy5yZW1vdmUoKVxuICAgIC8vICAgICB0YXJnLmhpdFxuICAgIC8vIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCdWxsZXQiXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwicmVxdWlyZSIsIkJ1bGxldCIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInBvcyIsIngiLCJ5IiwiZHJhdyIsImN0eCIsImJsbHRJbWciLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZHJhd0ltYWdlIiwiUkFESVVTIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/bullet.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Target = __webpack_require__(/*! ./target.js */ \"./src/scripts/target.js\");\nconst Bullet = __webpack_require__(/*! ./bullet.js */ \"./src/scripts/bullet.js\");\nconst Spinner = __webpack_require__(/*! ./spinner.js */ \"./src/scripts/spinner.js\");\nconst Background = __webpack_require__(/*! ./background.js */ \"./src/scripts/background.js\");\nconst Util = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\nclass Game {\n  // CHANGE to 4+\n\n  constructor() {\n    this.spinners = [];\n    this.targets = [];\n    this.bullets = [];\n    this.background = new Background({\n      game: this\n    });\n    this.addTarget();\n  }\n\n  // getGameWidth() {\n  //     return Game.WIDTH\n  // }\n  // getGameHeight() {\n  //     return Game.HEIGHT\n  // }\n\n  add(object) {\n    if (object instanceof Target) {\n      this.targets.push(object);\n    } else if (object instanceof Bullet) {\n      this.bullets.push(object);\n    } else if (object instanceof Spinner) {\n      this.spinners.push(object);\n    } else {\n      throw new Error(\"unknown type of object\");\n    }\n  }\n  addTarget() {\n    this.add(new Target({\n      pos: this.randomPosition(),\n      game: this,\n      vel: this.randomVel(5)\n    }));\n  }\n  addSpinner() {\n    const spinner = new Spinner({\n      game: this\n    });\n    this.add(spinner);\n    return spinner;\n  }\n  randomPosition() {\n    let xPos = window.innerWidth / 2.0,\n      yPos = window.innerHeight / 2.0;\n\n    // Random position can't be too close to spinner (within 3/2 * Spinner size of center)\n    while (Util.distance({\n      x: xPos,\n      y: yPos\n    }, {\n      x: window.innerWidth / 2.0,\n      y: window.innerHeight / 2.0\n    }) < 3 * Spinner.SPINNER_SIZE / 2.0) {\n      // console.log('too close!')\n      xPos = Math.random() * window.innerWidth;\n      yPos = Math.random() * window.innerHeight;\n    }\n    return {\n      x: xPos,\n      y: yPos\n    };\n  }\n\n  // -5 <= randVel <= 5\n  randomVel(scalar) {\n    let randX = Math.random() * scalar;\n    let randY = Math.random() * scalar;\n    let dirX = Math.random();\n    let dirY = Math.random();\n    if (dirX < 0.5) {\n      dirX = -1;\n    } else {\n      dirX = 1;\n    }\n    if (dirY < 0.5) {\n      dirY = -1;\n    } else {\n      dirY = 1;\n    }\n    return {\n      x: dirX * randX,\n      y: dirY * randY\n    };\n  }\n  draw(ctx) {\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    this.allObjects().forEach(object => {\n      // console.log(object)\n      object.draw(ctx);\n    });\n  }\n  moveObjects(delta) {\n    // console.log(this.allObjects())\n    this.allObjects().forEach(object => object.move(delta));\n  }\n  step(delta) {\n    this.moveObjects(delta);\n  }\n  remove(object) {\n    if (object instanceof Bullet) {\n      this.bullets.splice(this.bullets.indexOf(object), 1);\n    } else if (object instanceof Target) {\n      this.targets.splice(this.targets.indexOf(object), 1);\n    } else if (object instanceof Spinner) {\n      this.spinners.splice(this.spinners.indexOf(object), 1);\n    } else {\n      throw new Error(\"unknown type of object\");\n    }\n  }\n  allObjects() {\n    const allObjects = [].concat(this.background, this.spinners, this.targets, this.bullets);\n    return allObjects;\n  }\n  up() {\n    // console.log('up')\n    // console.log(this.background.vel)\n    this.background.vel.y += 1;\n    // console.log(this.background.vel)\n  }\n\n  down() {\n    this.background.vel.y -= 1;\n  }\n  left() {\n    this.background.vel.x += 1;\n  }\n  right() {\n    this.background.vel.x -= 1;\n  }\n}\n_defineProperty(Game, \"DIM_X\", window.innerWidth * 1.5);\n_defineProperty(Game, \"DIM_Y\", window.innerHeight * 1.5);\nmodule.exports = Game;\n// function Game() {\n//     this.targets = [];\n//     this.bullets = [];\n//     this.spinners = []\n// }\n\n// Game.prototype.allObjects = function allObjects() {\n//     return [].concat(this.targets, this.bullets, this.spinners)\n// }\n\n// Game.prototype.add = function add(object) {\n//     if (object instanceof Target) {\n//         this.targets.push(object);\n//     } else if (object instanceof Bullet) {\n//         this.bullets.push(object);\n//     } else if (object instanceof Spinner) {\n//         this.spinners.push(object);\n//     } else {\n//         throw new Error(\"unknown type of object\")\n//     }\n// }\n\n// Game.prototype.addTarget = function addTarget() {\n//     this.add(new Target({ game: this}))\n// }\n\n// Game.prototype.step = function step(delta) {\n//     this.moveObjects(delta);\n// }\n\n// Game.prototype.moveObjects = function moveObjects(delta) {\n//     // debugger\n//     this.targets[0].move(delta);\n// }\n\n// Game.prototype.draw = function draw(ctx) {\n//     ctx.clearRect(0,0, innerWidth, innerHeight);\n//     ctx.drawImage(img, 0,0)\n\n//     this.allObjects().forEach(function(object) {\n//         object.draw(ctx)\n//     })\n// }\n\n// module.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(module) {

eval("class GameView {\n  constructor(game, ctx) {\n    this.game = game;\n    this.ctx = ctx;\n    this.spinner = this.game.addSpinner();\n  }\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  bindKeyHandlers() {\n    const spinner = this.spinner;\n    const game = this.game;\n    key('space', () => spinner.fireBullet());\n    key('up', () => game.up());\n    key('down', () => game.down());\n    key('left', () => game.left());\n    key('right', () => game.right());\n    key('w', () => spinner.w());\n    key('a', () => spinner.a());\n    key('d', () => spinner.d());\n  }\n  animate(currTime) {\n    const timeDelta = currTime - this.lastTime;\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = currTime;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\n// function GameView(game, ctx) {\n//     this.ctx = ctx;\n//     this.game = game;\n// //     // this.target = this.game.addTarget();\n// }\n\n// GameView.prototype.start = function start() {\n// //     // this.bindKeyHandlers();\n//     this.lastTime = 0;\n\n//     requestAnimationFrame(this.animate.bind(this));\n// }\n\n// GameView.prototype.animate = function animate(time) {\n//     const timeDelta = time - this.lastTime;\n\n//     this.game.step(timeDelta);\n//     this.game.draw(this.ctx);\n\n//     requestAnimationFrame(this.animate.bind(this));\n// }\n\nmodule.exports = GameView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lX3ZpZXcuanMuanMiLCJuYW1lcyI6WyJHYW1lVmlldyIsImNvbnN0cnVjdG9yIiwiZ2FtZSIsImN0eCIsInNwaW5uZXIiLCJhZGRTcGlubmVyIiwic3RhcnQiLCJiaW5kS2V5SGFuZGxlcnMiLCJsYXN0VGltZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImFuaW1hdGUiLCJiaW5kIiwia2V5IiwiZmlyZUJ1bGxldCIsInVwIiwiZG93biIsImxlZnQiLCJyaWdodCIsInciLCJhIiwiZCIsImN1cnJUaW1lIiwidGltZURlbHRhIiwic3RlcCIsImRyYXciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maWRnZXQtc3Bpbm5lci1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZ2FtZV92aWV3LmpzPzgwZWUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmNsYXNzIEdhbWVWaWV3IHtcblxuICAgIGNvbnN0cnVjdG9yKGdhbWUsIGN0eCkge1xuICAgICAgICB0aGlzLmdhbWUgPSBnYW1lXG4gICAgICAgIHRoaXMuY3R4ID0gY3R4XG4gICAgICAgIHRoaXMuc3Bpbm5lciA9IHRoaXMuZ2FtZS5hZGRTcGlubmVyKClcbiAgICB9XG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgdGhpcy5iaW5kS2V5SGFuZGxlcnMoKVxuICAgICAgICB0aGlzLmxhc3RUaW1lID0gMFxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRlLmJpbmQodGhpcykpXG4gICAgfVxuXG4gICAgYmluZEtleUhhbmRsZXJzKCkge1xuICAgICAgICBjb25zdCBzcGlubmVyID0gdGhpcy5zcGlubmVyXG4gICAgICAgIGNvbnN0IGdhbWUgPSB0aGlzLmdhbWVcblxuICAgICAgICBrZXkoJ3NwYWNlJywgKCkgPT4gc3Bpbm5lci5maXJlQnVsbGV0KCkpXG4gICAgICAgIGtleSgndXAnLCAoKSA9PiBnYW1lLnVwKCkpXG4gICAgICAgIGtleSgnZG93bicsICgpID0+IGdhbWUuZG93bigpKVxuICAgICAgICBrZXkoJ2xlZnQnLCAoKSA9PiBnYW1lLmxlZnQoKSlcbiAgICAgICAga2V5KCdyaWdodCcsICgpID0+IGdhbWUucmlnaHQoKSlcbiAgICAgICAga2V5KCd3JywgKCkgPT4gc3Bpbm5lci53KCkpXG4gICAgICAgIGtleSgnYScsICgpID0+IHNwaW5uZXIuYSgpKVxuICAgICAgICBrZXkoJ2QnLCAoKSA9PiBzcGlubmVyLmQoKSlcbiAgICB9XG5cbiAgICBhbmltYXRlKGN1cnJUaW1lKSB7XG4gICAgICAgIGNvbnN0IHRpbWVEZWx0YSA9IGN1cnJUaW1lIC0gdGhpcy5sYXN0VGltZVxuXG4gICAgICAgIHRoaXMuZ2FtZS5zdGVwKHRpbWVEZWx0YSlcbiAgICAgICAgdGhpcy5nYW1lLmRyYXcodGhpcy5jdHgpXG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSBjdXJyVGltZVxuXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSlcbiAgICB9XG59XG5cblxuLy8gZnVuY3Rpb24gR2FtZVZpZXcoZ2FtZSwgY3R4KSB7XG4vLyAgICAgdGhpcy5jdHggPSBjdHg7XG4vLyAgICAgdGhpcy5nYW1lID0gZ2FtZTtcbi8vIC8vICAgICAvLyB0aGlzLnRhcmdldCA9IHRoaXMuZ2FtZS5hZGRUYXJnZXQoKTtcbi8vIH1cblxuLy8gR2FtZVZpZXcucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gc3RhcnQoKSB7XG4vLyAvLyAgICAgLy8gdGhpcy5iaW5kS2V5SGFuZGxlcnMoKTtcbi8vICAgICB0aGlzLmxhc3RUaW1lID0gMDtcblxuLy8gICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4vLyB9XG5cbi8vIEdhbWVWaWV3LnByb3RvdHlwZS5hbmltYXRlID0gZnVuY3Rpb24gYW5pbWF0ZSh0aW1lKSB7XG4vLyAgICAgY29uc3QgdGltZURlbHRhID0gdGltZSAtIHRoaXMubGFzdFRpbWU7XG5cbi8vICAgICB0aGlzLmdhbWUuc3RlcCh0aW1lRGVsdGEpO1xuLy8gICAgIHRoaXMuZ2FtZS5kcmF3KHRoaXMuY3R4KTtcblxuLy8gICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4vLyB9XG5cbm1vZHVsZS5leHBvcnRzID0gR2FtZVZpZXc7Il0sIm1hcHBpbmdzIjoiQUFFQSxNQUFNQSxRQUFRLENBQUM7RUFFWEMsV0FBVyxDQUFDQyxJQUFJLEVBQUVDLEdBQUcsRUFBRTtJQUNuQixJQUFJLENBQUNELElBQUksR0FBR0EsSUFBSTtJQUNoQixJQUFJLENBQUNDLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUksQ0FBQ0YsSUFBSSxDQUFDRyxVQUFVLEVBQUU7RUFDekM7RUFFQUMsS0FBSyxHQUFHO0lBQ0osSUFBSSxDQUFDQyxlQUFlLEVBQUU7SUFDdEIsSUFBSSxDQUFDQyxRQUFRLEdBQUcsQ0FBQztJQUNqQkMscUJBQXFCLENBQUMsSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUNsRDtFQUVBSixlQUFlLEdBQUc7SUFDZCxNQUFNSCxPQUFPLEdBQUcsSUFBSSxDQUFDQSxPQUFPO0lBQzVCLE1BQU1GLElBQUksR0FBRyxJQUFJLENBQUNBLElBQUk7SUFFdEJVLEdBQUcsQ0FBQyxPQUFPLEVBQUUsTUFBTVIsT0FBTyxDQUFDUyxVQUFVLEVBQUUsQ0FBQztJQUN4Q0QsR0FBRyxDQUFDLElBQUksRUFBRSxNQUFNVixJQUFJLENBQUNZLEVBQUUsRUFBRSxDQUFDO0lBQzFCRixHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU1WLElBQUksQ0FBQ2EsSUFBSSxFQUFFLENBQUM7SUFDOUJILEdBQUcsQ0FBQyxNQUFNLEVBQUUsTUFBTVYsSUFBSSxDQUFDYyxJQUFJLEVBQUUsQ0FBQztJQUM5QkosR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNVixJQUFJLENBQUNlLEtBQUssRUFBRSxDQUFDO0lBQ2hDTCxHQUFHLENBQUMsR0FBRyxFQUFFLE1BQU1SLE9BQU8sQ0FBQ2MsQ0FBQyxFQUFFLENBQUM7SUFDM0JOLEdBQUcsQ0FBQyxHQUFHLEVBQUUsTUFBTVIsT0FBTyxDQUFDZSxDQUFDLEVBQUUsQ0FBQztJQUMzQlAsR0FBRyxDQUFDLEdBQUcsRUFBRSxNQUFNUixPQUFPLENBQUNnQixDQUFDLEVBQUUsQ0FBQztFQUMvQjtFQUVBVixPQUFPLENBQUNXLFFBQVEsRUFBRTtJQUNkLE1BQU1DLFNBQVMsR0FBR0QsUUFBUSxHQUFHLElBQUksQ0FBQ2IsUUFBUTtJQUUxQyxJQUFJLENBQUNOLElBQUksQ0FBQ3FCLElBQUksQ0FBQ0QsU0FBUyxDQUFDO0lBQ3pCLElBQUksQ0FBQ3BCLElBQUksQ0FBQ3NCLElBQUksQ0FBQyxJQUFJLENBQUNyQixHQUFHLENBQUM7SUFDeEIsSUFBSSxDQUFDSyxRQUFRLEdBQUdhLFFBQVE7SUFFeEJaLHFCQUFxQixDQUFDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDbEQ7QUFDSjs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBYyxNQUFNLENBQUNDLE9BQU8sR0FBRzFCLFFBQVEifQ==\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/moving_object.js":
/*!**************************************!*\
  !*** ./src/scripts/moving_object.js ***!
  \**************************************/
/***/ (function(module) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass MovingObject {\n  // CHANGE to 4+\n\n  constructor(options) {\n    this.game = options.game;\n    this.vel = options.vel || {\n      x: 0,\n      y: 0\n    };\n    this.pos = options.pos || this.game.randomPosition();\n    this.rads = 0;\n    this.ctx = this.game.ctx;\n    this.isBounceable = false;\n    this.stop = {\n      right: MovingObject.WIDTH / 2 + MovingObject.SPINNER_SIZE / 2,\n      left: MovingObject.WIDTH / 2 - MovingObject.SPINNER_SIZE / 2,\n      up: MovingObject.HEIGHT / 2 + MovingObject.SPINNER_SIZE / 2,\n      down: MovingObject.HEIGHT / 2 - MovingObject.SPINNER_SIZE / 2\n    };\n    this.name = 'noName';\n  }\n  move(delta) {\n    console.log(this.name);\n    delta = delta || 1;\n    this.relVel = {\n      x: this.game.background.vel.x + this.vel.x,\n      y: this.game.background.vel.y + this.vel.y\n    };\n    // console.log(`object: ${this}`)\n    // console.log(`pos: ${{x: this.pos.x, y: this.pos.y}}`)\n    // console.log(`vel: ${{x: this.vel.x, y: this.vel.y}}`)\n    this.pos.x += this.relVel.x * delta / 40;\n    this.pos.y += this.relVel.y * delta / 40;\n    // const pos = this.pos           \n    // console.log(`bground Y vel: ${this.game.background.vel.y}`)\n    // console.log(`target y vel: ${this.vel.y}`)\n    if (this.isOobX(this.pos)) {\n      console.log('oobX');\n      if (this.isBounceable) {\n        this.vel.x = -1 * this.vel.x;\n      } else {\n        this.game.remove(this);\n      }\n    }\n    if (this.isOobY(this.pos)) {\n      console.log('oobY');\n      if (this.isBounceable) {\n        this.vel.y = -1 * this.vel.y;\n      } else {\n        this.game.remove(this);\n      }\n    }\n  }\n  remove(object) {\n    this.game.remove(this);\n  }\n  isOobRight(pos) {\n    // console.log('oobRight')\n    if (pos.x > MovingObject.WIDTH - this.stop.right) {\n      console.log('oobRight');\n    }\n    return pos.x > MovingObject.WIDTH - this.stop.right;\n  }\n  isOobLeft(pos) {\n    // console.log('oobLeft')\n    console.log(this.stop.left);\n    if (pos.x < this.stop.left) {\n      console.log('oobLeft');\n    }\n    return pos.x < this.stop.left;\n  }\n  isOobUp(pos) {\n    // console.log(MovingObject.HEIGHT)\n    // console.log('oobUp')\n    if (pos.y > this.stop.up) {\n      console.log('oobUp');\n    }\n    return pos.y > this.stop.up;\n  }\n  isOobDown(pos) {\n    // console.log('oobDown')\n    if (pos.y < MovingObject.HEIGHT - this.stop.down) {\n      console.log('oobDown');\n    }\n    return pos.y < MovingObject.HEIGHT - this.stop.down;\n  }\n  isOobX(pos) {\n    console.log('check X');\n    // console.log(this.pos)\n    return this.isOobRight(pos) || this.isOobLeft(pos);\n  }\n  isOobY(pos) {\n    // console.log(this.pos)\n    return this.isOobUp(pos) || this.isOobDown(pos);\n  }\n  isOob(pos) {\n    return this.isOobX(pos) || this.isOobY(pos);\n  }\n}\n_defineProperty(MovingObject, \"WIDTH\", window.innerWidth * 1.5);\n_defineProperty(MovingObject, \"HEIGHT\", window.innerHeight * 1.5);\n_defineProperty(MovingObject, \"SPINNER_SIZE\", 150);\nmodule.exports = MovingObject;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb3Zpbmdfb2JqZWN0LmpzLmpzIiwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiZ2FtZSIsInZlbCIsIngiLCJ5IiwicG9zIiwicmFuZG9tUG9zaXRpb24iLCJyYWRzIiwiY3R4IiwiaXNCb3VuY2VhYmxlIiwic3RvcCIsInJpZ2h0IiwiV0lEVEgiLCJTUElOTkVSX1NJWkUiLCJsZWZ0IiwidXAiLCJIRUlHSFQiLCJkb3duIiwibmFtZSIsIm1vdmUiLCJkZWx0YSIsImNvbnNvbGUiLCJsb2ciLCJyZWxWZWwiLCJiYWNrZ3JvdW5kIiwiaXNPb2JYIiwicmVtb3ZlIiwiaXNPb2JZIiwib2JqZWN0IiwiaXNPb2JSaWdodCIsImlzT29iTGVmdCIsImlzT29iVXAiLCJpc09vYkRvd24iLCJpc09vYiIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpZGdldC1zcGlubmVyLXByb2plY3QvLi9zcmMvc2NyaXB0cy9tb3Zpbmdfb2JqZWN0LmpzP2MyMDEiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jbGFzcyBNb3ZpbmdPYmplY3Qge1xuXG4gICAgLy8gQ0hBTkdFIHRvIDQrXG4gICAgc3RhdGljIFdJRFRIID0gd2luZG93LmlubmVyV2lkdGggKiAxLjVcbiAgICBzdGF0aWMgSEVJR0hUID0gd2luZG93LmlubmVySGVpZ2h0ICogMS41XG4gICAgc3RhdGljIFNQSU5ORVJfU0laRSA9IDE1MFxuXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB0aGlzLmdhbWUgPSBvcHRpb25zLmdhbWVcbiAgICAgICAgdGhpcy52ZWwgPSBvcHRpb25zLnZlbCB8fCB7eDogMCwgeTogMH1cbiAgICAgICAgdGhpcy5wb3MgPSBvcHRpb25zLnBvcyB8fCB0aGlzLmdhbWUucmFuZG9tUG9zaXRpb24oKVxuICAgICAgICB0aGlzLnJhZHMgPSAwXG4gICAgICAgIHRoaXMuY3R4ID0gdGhpcy5nYW1lLmN0eFxuICAgICAgICB0aGlzLmlzQm91bmNlYWJsZSA9IGZhbHNlXG4gICAgICAgIHRoaXMuc3RvcCA9IHsgICByaWdodDogTW92aW5nT2JqZWN0LldJRFRIIC8gMiArIE1vdmluZ09iamVjdC5TUElOTkVSX1NJWkUgLyAyLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogTW92aW5nT2JqZWN0LldJRFRIIC8gMiAtIE1vdmluZ09iamVjdC5TUElOTkVSX1NJWkUgLyAyLFxuICAgICAgICAgICAgICAgICAgICAgICAgdXA6IE1vdmluZ09iamVjdC5IRUlHSFQgLyAyICsgTW92aW5nT2JqZWN0LlNQSU5ORVJfU0laRSAvIDIsXG4gICAgICAgICAgICAgICAgICAgICAgICBkb3duOiBNb3ZpbmdPYmplY3QuSEVJR0hUIC8gMiAtIE1vdmluZ09iamVjdC5TUElOTkVSX1NJWkUgLyAyXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgdGhpcy5uYW1lID0gJ25vTmFtZSdcbiAgICB9XG5cbiAgICBtb3ZlKGRlbHRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMubmFtZSlcbiAgICAgICAgZGVsdGEgPSBkZWx0YSB8fCAxXG4gICAgICAgIHRoaXMucmVsVmVsID0ge3g6IHRoaXMuZ2FtZS5iYWNrZ3JvdW5kLnZlbC54ICsgdGhpcy52ZWwueCwgeTogdGhpcy5nYW1lLmJhY2tncm91bmQudmVsLnkgKyB0aGlzLnZlbC55fVxuICAgICAgICAvLyBjb25zb2xlLmxvZyhgb2JqZWN0OiAke3RoaXN9YClcbiAgICAgICAgLy8gY29uc29sZS5sb2coYHBvczogJHt7eDogdGhpcy5wb3MueCwgeTogdGhpcy5wb3MueX19YClcbiAgICAgICAgLy8gY29uc29sZS5sb2coYHZlbDogJHt7eDogdGhpcy52ZWwueCwgeTogdGhpcy52ZWwueX19YClcbiAgICAgICAgdGhpcy5wb3MueCArPSB0aGlzLnJlbFZlbC54ICogZGVsdGEgLyA0MDtcbiAgICAgICAgdGhpcy5wb3MueSArPSB0aGlzLnJlbFZlbC55ICogZGVsdGEgLyA0MDtcbiAgICAgICAgLy8gY29uc3QgcG9zID0gdGhpcy5wb3MgICAgICAgICAgIFxuICAgICAgICAvLyBjb25zb2xlLmxvZyhgYmdyb3VuZCBZIHZlbDogJHt0aGlzLmdhbWUuYmFja2dyb3VuZC52ZWwueX1gKVxuICAgICAgICAvLyBjb25zb2xlLmxvZyhgdGFyZ2V0IHkgdmVsOiAke3RoaXMudmVsLnl9YClcbiAgICAgICAgaWYgKHRoaXMuaXNPb2JYKHRoaXMucG9zKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ29vYlgnKVxuICAgICAgICAgICAgaWYgKHRoaXMuaXNCb3VuY2VhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52ZWwueCA9IC0xICogdGhpcy52ZWwueFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUucmVtb3ZlKHRoaXMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaXNPb2JZKHRoaXMucG9zKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ29vYlknKVxuICAgICAgICAgICAgaWYgKHRoaXMuaXNCb3VuY2VhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52ZWwueSA9IC0xICogdGhpcy52ZWwueVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUucmVtb3ZlKHRoaXMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW1vdmUob2JqZWN0KSB7XG4gICAgICAgIHRoaXMuZ2FtZS5yZW1vdmUodGhpcylcbiAgICB9XG5cbiAgICBpc09vYlJpZ2h0KHBvcykge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnb29iUmlnaHQnKVxuICAgICAgICBpZiAocG9zLnggPiBNb3ZpbmdPYmplY3QuV0lEVEggLSB0aGlzLnN0b3AucmlnaHQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvb2JSaWdodCcpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvcy54ID4gTW92aW5nT2JqZWN0LldJRFRIIC0gdGhpcy5zdG9wLnJpZ2h0XG4gICAgfVxuXG4gICAgaXNPb2JMZWZ0KHBvcykge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnb29iTGVmdCcpXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3RvcC5sZWZ0KVxuICAgICAgICBpZiAocG9zLnggPCB0aGlzLnN0b3AubGVmdCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ29vYkxlZnQnKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwb3MueCA8IHRoaXMuc3RvcC5sZWZ0XG4gICAgfVxuXG4gICAgaXNPb2JVcChwb3MpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coTW92aW5nT2JqZWN0LkhFSUdIVClcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ29vYlVwJylcbiAgICAgICAgaWYgKHBvcy55ID4gdGhpcy5zdG9wLnVwKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnb29iVXAnKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwb3MueSA+IHRoaXMuc3RvcC51cFxuICAgIH1cblxuICAgIGlzT29iRG93bihwb3MpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ29vYkRvd24nKVxuICAgICAgICBpZiAocG9zLnkgPCBNb3ZpbmdPYmplY3QuSEVJR0hUIC0gdGhpcy5zdG9wLmRvd24pIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvb2JEb3duJylcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcG9zLnkgPCBNb3ZpbmdPYmplY3QuSEVJR0hUIC0gdGhpcy5zdG9wLmRvd25cbiAgICB9XG5cbiAgICBpc09vYlgocG9zKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdjaGVjayBYJylcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5wb3MpXG4gICAgICAgIHJldHVybiB0aGlzLmlzT29iUmlnaHQocG9zKSB8fCB0aGlzLmlzT29iTGVmdChwb3MpXG4gICAgfVxuXG4gICAgaXNPb2JZKHBvcykge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnBvcylcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNPb2JVcChwb3MpIHx8IHRoaXMuaXNPb2JEb3duKHBvcylcbiAgICB9XG5cbiAgICBpc09vYihwb3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNPb2JYKHBvcykgfHwgdGhpcy5pc09vYlkocG9zKVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNb3ZpbmdPYmplY3RcbiAgIl0sIm1hcHBpbmdzIjoiOzs7QUFDQSxNQUFNQSxZQUFZLENBQUM7RUFFZjs7RUFLQUMsV0FBVyxDQUFDQyxPQUFPLEVBQUU7SUFDakIsSUFBSSxDQUFDQyxJQUFJLEdBQUdELE9BQU8sQ0FBQ0MsSUFBSTtJQUN4QixJQUFJLENBQUNDLEdBQUcsR0FBR0YsT0FBTyxDQUFDRSxHQUFHLElBQUk7TUFBQ0MsQ0FBQyxFQUFFLENBQUM7TUFBRUMsQ0FBQyxFQUFFO0lBQUMsQ0FBQztJQUN0QyxJQUFJLENBQUNDLEdBQUcsR0FBR0wsT0FBTyxDQUFDSyxHQUFHLElBQUksSUFBSSxDQUFDSixJQUFJLENBQUNLLGNBQWMsRUFBRTtJQUNwRCxJQUFJLENBQUNDLElBQUksR0FBRyxDQUFDO0lBQ2IsSUFBSSxDQUFDQyxHQUFHLEdBQUcsSUFBSSxDQUFDUCxJQUFJLENBQUNPLEdBQUc7SUFDeEIsSUFBSSxDQUFDQyxZQUFZLEdBQUcsS0FBSztJQUN6QixJQUFJLENBQUNDLElBQUksR0FBRztNQUFJQyxLQUFLLEVBQUViLFlBQVksQ0FBQ2MsS0FBSyxHQUFHLENBQUMsR0FBR2QsWUFBWSxDQUFDZSxZQUFZLEdBQUcsQ0FBQztNQUM3REMsSUFBSSxFQUFFaEIsWUFBWSxDQUFDYyxLQUFLLEdBQUcsQ0FBQyxHQUFHZCxZQUFZLENBQUNlLFlB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\n//# sourceURL=webpack-internal:///./src/scripts/moving_object.js\n");

/***/ }),

/***/ "./src/scripts/spinner.js":
/*!********************************!*\
  !*** ./src/scripts/spinner.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Util = __webpack_require__(/*! ./util */ \"./src/scripts/util.js\");\nconst Bullet = __webpack_require__(/*! ./bullet */ \"./src/scripts/bullet.js\");\nclass Spinner {\n  // Need MIN_ANG_SPD = START_ANG_SPD for max speed to work properly\n\n  // Game too hard to reach 40\n\n  constructor(options) {\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    this.game = options.game;\n    this.vel = {\n      x: 0,\n      y: 0\n    };\n    this.hiddenVel = this.game.background.vel;\n    this.ctx = this.game.ctx;\n    // console.log(this.game.background.vel)\n    this.drawingPos = {\n      x: innerWidth / 2.0 - Spinner.SPINNER_SIZE / 2.0,\n      y: innerHeight / 2.0 - Spinner.SPINNER_SIZE / 2.0\n    };\n    this.hiddenPos = {\n      x: innerWidth / 2.0 - Spinner.SPINNER_SIZE / 2.0 + this.game.background.pos.x,\n      y: innerHeight / 2.0 - Spinner.SPINNER_SIZE / 2.0 + this.game.background.pos.y\n    };\n    this.rads = 0;\n    this.center = {\n      x: innerWidth / 2.0,\n      y: innerHeight / 2.0\n    };\n    this.angularSpd = Spinner.START_ANG_SPD;\n    this.spinChecks = {\n      'W': 'not passed',\n      'A': 'not passed',\n      'D': 'not passed'\n    };\n    this.reset = false;\n    this.text = [];\n    this.textColor = null;\n  }\n  drawText(ctx) {\n    // console.log('writing text')\n    // console.log(`text: ${this.text[0]}`)\n    // console.log(`textLoc: ${this.center.x}, ${this.center.y -150}`)\n    ctx.fillStyle = `${this.textColor}`;\n    for (let i = 0; i < this.text.length; i++) {\n      ctx.fillText(this.text[i], this.center.x, this.center.y - 150 + i * 20);\n    }\n  }\n  draw(ctx) {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    const checkColor = spinLetter => {\n      // console.log(this.spinChecks[spinLetter])\n      if (this.spinChecks[`${spinLetter}`] === 'not passed') {\n        // console.log('white')\n        return 'white';\n      } else if (this.spinChecks[`${spinLetter}`] === 'failed') {\n        return 'red';\n      } else if (this.spinChecks[`${spinLetter}`] === 'passed') {\n        return 'green';\n      }\n    };\n    // draw background circles first\n    const drawBGcircle = (x, y, ctx, color, xOff, yOff, txt) => {\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(x, y, 22, 2 * Math.PI, false);\n      ctx.font = '20px Arial';\n      ctx.fillText(txt, x + xOff, y + yOff);\n      ctx.strokeStyle = color;\n      ctx.stroke();\n    };\n    if (this.text.length > 0) {\n      this.drawText(ctx);\n    }\n    // Possible speed so high that upcoming conditional doesn't hit. Hard code a max spin speed to prevent\n\n    // console.log(this.angularSpd)\n    // if it's past D but not yet at W\n    if (this.rads < -4 / 3 * Math.PI - Spinner.SPIN_LENIENCY && this.rads > -2 * Math.PI + Spinner.SPIN_LENIENCY) {\n      // and if it hasn't been checked yet\n      if (this.reset === false) {\n        // then check\n        if (this.spinChecks['W'] === 'passed' && this.spinChecks['A'] === 'passed' && this.spinChecks['D'] === 'passed') {\n          // console.log('spin speed up!')\n          this.angularSpd += 1;\n          this.text.push('Max Speed Up!');\n          this.game.background.maxSpeedUp();\n          this.textColor = 'green';\n          // Max spin speed\n          if (this.angularSpd === Spinner.MAX_ANG_SPD) {\n            this.angularSpd = Spinner.MAX_ANG_SPD;\n            this.text.push('Highest Max Speed!');\n            // console.log('max spin speed reached')\n          } else if (this.angularSpd > Spinner.MAX_ANG_SPD) {\n            this.angularSpd = Spinner.MAX_ANG_SPD;\n            this.text.push('Highest Max Speed!');\n            // console.log('max spin speed reached')\n            this.game.background.maxSpeedDown();\n          }\n        } else {\n          this.angularSpd -= 1;\n          this.text.push('Max Speed Down.');\n          this.textColor = 'red';\n          this.game.background.maxSpeedDown();\n          // console.log('Max Speed Down.')\n          if (this.angularSpd === Spinner.MIN_ANG_SPD) {\n            this.angularSpd = Spinner.MIN_ANG_SPD;\n            this.text.push('At 0 Max Speed.');\n            // console.log('min spin speed reached')\n          } else if (this.angularSpd < Spinner.MIN_ANG_SPD) {\n            this.angularSpd = Spinner.MIN_ANG_SPD;\n            this.text.push('At 0 Max Speed.');\n            // CHANGE to 0\n            this.game.background.maxSpeed = 5;\n            // console.log('min spin speed reached')\n          }\n        }\n\n        this.spinChecks['W'] = 'not passed';\n        this.spinChecks['A'] = 'not passed';\n        this.spinChecks['D'] = 'not passed';\n        this.reset = true;\n      }\n    } else {\n      this.reset = false;\n    }\n    if (this.rads < -2 / 3 * Math.PI - Spinner.SPIN_LENIENCY && this.rads > -4 / 3 * Math.PI - Spinner.SPIN_LENIENCY) {\n      this.text = [];\n    }\n\n    // Hardcode positions and offsets\n    drawBGcircle(this.center.x, this.center.y - 45, ctx, checkColor('W'), 0, 2, 'W');\n    drawBGcircle(this.center.x - 39, this.center.y + 22, ctx, checkColor('A'), 0, 0, 'A');\n    drawBGcircle(this.center.x + 39, this.center.y + 22, ctx, checkColor('D'), 0, 0, 'D');\n\n    // console.log(`angularSpd: ${this.angularSpd}`)\n    ctx.save();\n    ctx.translate(this.center.x, this.center.y);\n    ctx.rotate(this.rads + Math.PI / 64.0);\n    this.rads -= this.angularSpd * Math.PI / 640.0;\n    this.rads %= 2 * Math.PI;\n    ctx.translate(-1.0 * this.center.x, -1.0 * this.center.y);\n    const spinnerImg = document.getElementById(\"spinnerImg\");\n    ctx.drawImage(spinnerImg, this.drawingPos.x, this.drawingPos.y, Spinner.SPINNER_SIZE, Spinner.SPINNER_SIZE);\n    ctx.restore();\n  }\n  move(delta) {\n    delta = delta || 1;\n    // console.log(`object: ${this}`)\n    // console.log(`pos: ${{x: this.pos.x, y: this.pos.y}}`)\n    // console.log(`vel: ${{x: this.vel.x, y: thiws.vel.y}}`)\n    this.hiddenPos.x += this.hiddenVel.x * delta / 40;\n    this.hiddenPos.y += this.hiddenVel.y * delta / 40;\n\n    // const pos = this.pos           \n    // console.log(`rads: ${this.rads}`)\n  }\n\n  fireBullet() {\n    const norm = Util.norm(this.hiddenVel);\n    // console.log(norm)\n\n    if (norm === 0) {\n      return;\n    }\n    const relVel = Util.scale(Util.dir(this.hiddenVel), Bullet.SPEED);\n    const bulletVel = {\n      x: relVel.x + this.hiddenVel.x,\n      y: relVel.y + this.hiddenVel.y\n    };\n    const bullet = new Bullet({\n      vel: bulletVel,\n      pos: this.drawingPos,\n      game: this.game\n    });\n\n    // console.log(bullet)\n    this.game.add(bullet);\n  }\n  w() {\n    // console.log(`rads: ${this.rads}`)\n    const checkW = () => {\n      if (this.spinChecks['W'] === 'not passed' && this.rads < -2 * Math.PI + Spinner.SPIN_LENIENCY && this.rads > -2 * Math.PI || this.rads > -1 * Spinner.SPIN_LENIENCY) {\n        this.spinChecks['W'] = 'passed';\n        // return true\n      } else {\n        this.spinChecks['W'] = 'failed';\n        // return false\n      }\n    };\n\n    checkW();\n    // console.log(this.spinChecks)\n    // this.angularSpd += 1\n  }\n\n  a() {\n    const checkA = () => {\n      if (this.spinChecks['A'] === 'not passed' && this.rads < -2 / 3 * Math.PI + Spinner.SPIN_LENIENCY && this.rads > -2 / 3 * Math.PI - Spinner.SPIN_LENIENCY) {\n        this.spinChecks['A'] = 'passed';\n        // return true\n      } else {\n        this.spinChecks['A'] = 'failed';\n        // return false\n      }\n    };\n\n    checkA();\n    // console.log(this.spinChecks)\n  }\n\n  d() {\n    const checkD = () => {\n      if (this.spinChecks['D'] === 'not passed' && this.rads < -4 / 3 * Math.PI + Spinner.SPIN_LENIENCY && this.rads > -4 / 3 * Math.PI - Spinner.SPIN_LENIENCY) {\n        this.spinChecks['D'] = 'passed';\n        return true;\n      } else {\n        this.spinChecks['D'] = 'failed';\n        // return false\n      }\n    };\n\n    checkD();\n    // console.log(this.spinChecks)\n  }\n}\n_defineProperty(Spinner, \"SPINNER_SIZE\", 150);\n_defineProperty(Spinner, \"START_ANG_SPD\", 3);\n_defineProperty(Spinner, \"SPIN_LENIENCY\", 0.6);\n_defineProperty(Spinner, \"MAX_ANG_SPD\", 40);\n_defineProperty(Spinner, \"MIN_ANG_SPD\", 3);\nmodule.exports = Spinner;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/spinner.js\n");

/***/ }),

/***/ "./src/scripts/target.js":
/*!*******************************!*\
  !*** ./src/scripts/target.js ***!
  \*******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst MovingObject = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\nclass Target extends MovingObject {\n  constructor(options) {\n    super(options);\n    this.isBounceable = true;\n    this.name = 'Targ';\n  }\n  draw(ctx) {\n    const targImg = document.getElementById(\"targetImg\");\n    ctx.drawImage(targImg, this.pos.x, this.pos.y, Target.RADIUS * 2, Target.RADIUS * 2);\n    // console.log(`pos: ${JSON.stringify(this.pos)}`)\n  }\n}\n_defineProperty(Target, \"RADIUS\", 25);\nmodule.exports = Target;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90YXJnZXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTUEsWUFBWSxHQUFHQyxtQkFBTyxDQUFDLHVEQUFpQixDQUFDO0FBRS9DLE1BQU1DLE1BQU0sU0FBU0YsWUFBWSxDQUFDO0VBRzlCRyxXQUFXLENBQUVDLE9BQU8sRUFBRTtJQUNsQixLQUFLLENBQUNBLE9BQU8sQ0FBQztJQUNkLElBQUksQ0FBQ0MsWUFBWSxHQUFHLElBQUk7SUFDeEIsSUFBSSxDQUFDQyxJQUFJLEdBQUcsTUFBTTtFQUN0QjtFQUVBQyxJQUFJLENBQUVDLEdBQUcsRUFBQztJQUNOLE1BQU1DLE9BQU8sR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsV0FBVyxDQUFDO0lBQ3BESCxHQUFHLENBQUNJLFNBQVMsQ0FBQ0gsT0FBTyxFQUFFLElBQUksQ0FBQ0ksR0FBRyxDQUFDQyxDQUFDLEVBQUUsSUFBSSxDQUFDRCxHQUFHLENBQUNFLENBQUMsRUFBRWIsTUFBTSxDQUFDYyxNQUFNLEdBQUcsQ0FBQyxFQUFFZCxNQUFNLENBQUNjLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDcEY7RUFDSjtBQUNKO0FBQUMsZ0JBZEtkLE1BQU0sWUFDUSxFQUFFO0FBZXRCZSxNQUFNLENBQUNDLE9BQU8sR0FBR2hCLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maWRnZXQtc3Bpbm5lci1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvdGFyZ2V0LmpzP2UyOWMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTW92aW5nT2JqZWN0ID0gcmVxdWlyZShcIi4vbW92aW5nX29iamVjdFwiKVxuXG5jbGFzcyBUYXJnZXQgZXh0ZW5kcyBNb3ZpbmdPYmplY3Qge1xuICAgIHN0YXRpYyBSQURJVVMgPSAyNVxuXG4gICAgY29uc3RydWN0b3IgKG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIob3B0aW9ucylcbiAgICAgICAgdGhpcy5pc0JvdW5jZWFibGUgPSB0cnVlXG4gICAgICAgIHRoaXMubmFtZSA9ICdUYXJnJ1xuICAgIH1cbiAgICAgXG4gICAgZHJhdyAoY3R4KXtcbiAgICAgICAgY29uc3QgdGFyZ0ltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFyZ2V0SW1nXCIpXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGFyZ0ltZywgdGhpcy5wb3MueCwgdGhpcy5wb3MueSwgVGFyZ2V0LlJBRElVUyAqIDIsIFRhcmdldC5SQURJVVMgKiAyKVxuICAgICAgICAvLyBjb25zb2xlLmxvZyhgcG9zOiAke0pTT04uc3RyaW5naWZ5KHRoaXMucG9zKX1gKVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUYXJnZXRcbiAgIl0sIm5hbWVzIjpbIk1vdmluZ09iamVjdCIsInJlcXVpcmUiLCJUYXJnZXQiLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJpc0JvdW5jZWFibGUiLCJuYW1lIiwiZHJhdyIsImN0eCIsInRhcmdJbWciLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZHJhd0ltYWdlIiwicG9zIiwieCIsInkiLCJSQURJVVMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/target.js\n");

/***/ }),

/***/ "./src/scripts/util.js":
/*!*****************************!*\
  !*** ./src/scripts/util.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dir\": function() { return /* binding */ dir; },\n/* harmony export */   \"distance\": function() { return /* binding */ distance; },\n/* harmony export */   \"drawCircle\": function() { return /* binding */ drawCircle; },\n/* harmony export */   \"norm\": function() { return /* binding */ norm; },\n/* harmony export */   \"randomVec\": function() { return /* binding */ randomVec; },\n/* harmony export */   \"scale\": function() { return /* binding */ scale; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\nconst randomVec = length => {\n  const deg = 2 * Math.PI * Math.random();\n  return scale({\n    x: Math.sin(deg),\n    y: Math.cos(deg)\n  }, length);\n};\nconst scale = (vec, m) => {\n  return {\n    x: vec.x * m,\n    y: vec.y * m\n  };\n};\nconst wrap = (coord, max) => {\n  if (coord < 0) {\n    return max - coord % max;\n  } else if (coord > max) {\n    return coord % max;\n  } else {\n    return coord;\n  }\n};\nconst distance = (pos1, pos2) => {\n  // console.log(pos1.y)\n  // console.log(Math.pow((pos2.x - pos1.x), 2) + Math.pow(pos2.y - pos1.y, 2)\n  return Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\n};\nconst norm = vec => {\n  return distance({\n    x: 0,\n    y: 0\n  }, vec);\n};\nconst dir = vec => {\n  const normed = norm(vec);\n  return scale(vec, 1 / normed);\n};\nconst drawCircle = (ctx, color, pos, rad) => {\n  // console.log(color)\n  // console.log(`ctx: ${ctx}`)\n  ctx.fillStyle = 'white';\n  ctx.beginPath();\n  ctx.arc(pos.x, pos.y, rad, 2 * Math.PI, false);\n\n  // ctx.font = '20px Arial'\n  // ctx.fillText('W', pos.x - 9, pos.y + 8)\n  // ctx.strokeStyle = 'white'\n  // ctx.stroke()\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91dGlsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxTQUFTLEdBQUlDLE1BQU0sSUFBSztFQUNqQyxNQUFNQyxHQUFHLEdBQUcsQ0FBQyxHQUFHQyxJQUFJLENBQUNDLEVBQUUsR0FBR0QsSUFBSSxDQUFDRSxNQUFNLEVBQUU7RUFDdkMsT0FBT0MsS0FBSyxDQUFDO0lBQUNDLENBQUMsRUFBRUosSUFBSSxDQUFDSyxHQUFHLENBQUNOLEdBQUcsQ0FBQztJQUFFTyxDQUFDLEVBQUVOLElBQUksQ0FBQ08sR0FBRyxDQUFDUixHQUFHO0VBQUMsQ0FBQyxFQUFFRCxNQUFNLENBQUM7QUFDOUQsQ0FBQztBQUVNLE1BQU1LLEtBQUssR0FBRyxDQUFDSyxHQUFHLEVBQUVDLENBQUMsS0FBSztFQUM3QixPQUFPO0lBQUNMLENBQUMsRUFBRUksR0FBRyxDQUFDSixDQUFDLEdBQUdLLENBQUM7SUFBRUgsQ0FBQyxFQUFFRSxHQUFHLENBQUNGLENBQUMsR0FBR0c7RUFBQyxDQUFDO0FBQ3ZDLENBQUM7QUFFTSxNQUFNQyxJQUFJLEdBQUcsQ0FBQ0MsS0FBSyxFQUFFQyxHQUFHLEtBQUs7RUFDaEMsSUFBSUQsS0FBSyxHQUFHLENBQUMsRUFBRTtJQUNYLE9BQU9DLEdBQUcsR0FBSUQsS0FBSyxHQUFHQyxHQUFJO0VBQzlCLENBQUMsTUFBTSxJQUFJRCxLQUFLLEdBQUdDLEdBQUcsRUFBRTtJQUNwQixPQUFPRCxLQUFLLEdBQUdDLEdBQUc7RUFDdEIsQ0FBQyxNQUFNO0lBQ0gsT0FBT0QsS0FBSztFQUNoQjtBQUNKLENBQUM7QUFFTSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ0MsSUFBSSxFQUFFQyxJQUFJLEtBQUs7RUFDcEM7RUFDQTtFQUNBLE9BQU9mLElBQUksQ0FBQ2dCLElBQUksQ0FBQ2hCLElBQUksQ0FBQ2lCLEdBQUcsQ0FBRUYsSUFBSSxDQUFDWCxDQUFDLEdBQUdVLElBQUksQ0FBQ1YsQ0FBQyxFQUFHLENBQUMsQ0FBQyxHQUFHSixJQUFJLENBQUNpQixHQUFHLENBQUVGLElBQUksQ0FBQ1QsQ0FBQyxHQUFHUSxJQUFJLENBQUNSLENBQUMsRUFBRyxDQUFDLENBQUMsQ0FBQztBQUNyRixDQUFDO0FBRU0sTUFBTVksSUFBSSxHQUFJVixHQUFHLElBQUs7RUFDekIsT0FBT0ssUUFBUSxDQUFDO0lBQUNULENBQUMsRUFBRSxDQUFDO0lBQUVFLENBQUMsRUFBRTtFQUFDLENBQUMsRUFBRUUsR0FBRyxDQUFDO0FBQ3RDLENBQUM7QUFFTSxNQUFNVyxHQUFHLEdBQUlYLEdBQUcsSUFBSztFQUN4QixNQUFNWSxNQUFNLEdBQUdGLElBQUksQ0FBQ1YsR0FBRyxDQUFDO0VBQ3hCLE9BQU9MLEtBQUssQ0FBQ0ssR0FBRyxFQUFFLENBQUMsR0FBR1ksTUFBTSxDQUFDO0FBQ2pDLENBQUM7QUFFTSxNQUFNQyxVQUFVLEdBQUcsQ0FBQ0MsR0FBRyxFQUFFQyxLQUFLLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ2hEO0VBQ0E7RUFDQUgsR0FBRyxDQUFDSSxTQUFTLEdBQUcsT0FBTztFQUV2QkosR0FBRyxDQUFDSyxTQUFTLEVBQUU7RUFFZkwsR0FBRyxDQUFDTSxHQUFHLENBQ0hKLEdBQUcsQ0FBQ3BCLENBQUMsRUFDTG9CLEdBQUcsQ0FBQ2xCLENBQUMsRUFDTG1CLEdBQUcsRUFDSCxDQUFDLEdBQUd6QixJQUFJLENBQUNDLEVBQUUsRUFDWCxLQUFLLENBQ1I7O0VBRUQ7RUFDQTtFQUNBO0VBQ0E7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlkZ2V0LXNwaW5uZXItcHJvamVjdC8uL3NyYy9zY3JpcHRzL3V0aWwuanM/Njk0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmFuZG9tVmVjID0gKGxlbmd0aCkgPT4ge1xuICAgIGNvbnN0IGRlZyA9IDIgKiBNYXRoLlBJICogTWF0aC5yYW5kb20oKVxuICAgIHJldHVybiBzY2FsZSh7eDogTWF0aC5zaW4oZGVnKSwgeTogTWF0aC5jb3MoZGVnKX0sIGxlbmd0aClcbn1cblxuZXhwb3J0IGNvbnN0IHNjYWxlID0gKHZlYywgbSkgPT4ge1xuICAgIHJldHVybiB7eDogdmVjLnggKiBtLCB5OiB2ZWMueSAqIG19XG59XG5cbmV4cG9ydCBjb25zdCB3cmFwID0gKGNvb3JkLCBtYXgpID0+IHtcbiAgICBpZiAoY29vcmQgPCAwKSB7XG4gICAgICAgIHJldHVybiBtYXggLSAoY29vcmQgJSBtYXgpXG4gICAgfSBlbHNlIGlmIChjb29yZCA+IG1heCkge1xuICAgICAgICByZXR1cm4gY29vcmQgJSBtYXhcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY29vcmRcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBkaXN0YW5jZSA9IChwb3MxLCBwb3MyKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cocG9zMS55KVxuICAgIC8vIGNvbnNvbGUubG9nKE1hdGgucG93KChwb3MyLnggLSBwb3MxLngpLCAyKSArIE1hdGgucG93KHBvczIueSAtIHBvczEueSwgMilcbiAgICByZXR1cm4gTWF0aC5zcXJ0KE1hdGgucG93KChwb3MyLnggLSBwb3MxLngpLCAyKSArIE1hdGgucG93KChwb3MyLnkgLSBwb3MxLnkpLCAyKSlcbn1cblxuZXhwb3J0IGNvbnN0IG5vcm0gPSAodmVjKSA9PiB7XG4gICAgcmV0dXJuIGRpc3RhbmNlKHt4OiAwLCB5OiAwfSwgdmVjKVxufVxuXG5leHBvcnQgY29uc3QgZGlyID0gKHZlYykgPT4ge1xuICAgIGNvbnN0IG5vcm1lZCA9IG5vcm0odmVjKVxuICAgIHJldHVybiBzY2FsZSh2ZWMsIDEgLyBub3JtZWQpXG59XG5cbmV4cG9ydCBjb25zdCBkcmF3Q2lyY2xlID0gKGN0eCwgY29sb3IsIHBvcywgcmFkKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2coY29sb3IpXG4gICAgLy8gY29uc29sZS5sb2coYGN0eDogJHtjdHh9YClcbiAgICBjdHguZmlsbFN0eWxlID0gJ3doaXRlJ1xuXG4gICAgY3R4LmJlZ2luUGF0aCgpXG5cbiAgICBjdHguYXJjKFxuICAgICAgICBwb3MueCxcbiAgICAgICAgcG9zLnksXG4gICAgICAgIHJhZCxcbiAgICAgICAgMiAqIE1hdGguUEksXG4gICAgICAgIGZhbHNlXG4gICAgKVxuXG4gICAgLy8gY3R4LmZvbnQgPSAnMjBweCBBcmlhbCdcbiAgICAvLyBjdHguZmlsbFRleHQoJ1cnLCBwb3MueCAtIDksIHBvcy55ICsgOClcbiAgICAvLyBjdHguc3Ryb2tlU3R5bGUgPSAnd2hpdGUnXG4gICAgLy8gY3R4LnN0cm9rZSgpXG59Il0sIm5hbWVzIjpbInJhbmRvbVZlYyIsImxlbmd0aCIsImRlZyIsIk1hdGgiLCJQSSIsInJhbmRvbSIsInNjYWxlIiwieCIsInNpbiIsInkiLCJjb3MiLCJ2ZWMiLCJtIiwid3JhcCIsImNvb3JkIiwibWF4IiwiZGlzdGFuY2UiLCJwb3MxIiwicG9zMiIsInNxcnQiLCJwb3ciLCJub3JtIiwiZGlyIiwibm9ybWVkIiwiZHJhd0NpcmNsZSIsImN0eCIsImNvbG9yIiwicG9zIiwicmFkIiwiZmlsbFN0eWxlIiwiYmVnaW5QYXRoIiwiYXJjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/util.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maWRnZXQtc3Bpbm5lci1wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;